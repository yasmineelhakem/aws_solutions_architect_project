AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  image-processor

  Sample SAM Template for image-processor

Globals:
  Function:
    Timeout: 60
    LoggingConfig:
      LogFormat: JSON

Resources:
  # Bucket for processed images
  ProcessedImagesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: processed-bucket

  # Lambda Function with inline policies
  ImageProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: image_processor/
      Handler: app.lambda_handler
      Runtime: python3.11
      Architectures:
        - x86_64
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
              Resource: 'arn:aws:s3:::original-bucket/*'
            - Effect: Allow
              Action:
                - s3:PutObject
              Resource: "arn:aws:s3:::processed-bucket/*"  

  # Original images bucket with notification
  OriginalImagesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: original-bucket
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt ImageProcessorFunction.Arn
    DependsOn: S3InvokeLambdaPermission

  # Permission for S3 to invoke Lambda
  S3InvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ImageProcessorFunction
      Principal: s3.amazonaws.com
      SourceArn: "arn:aws:s3:::original-bucket"  # correct bucket, no /* (the error in deployment)
      SourceAccount: !Ref 'AWS::AccountId'

Outputs:
  OriginalBucketName:
    Description: S3 bucket for uploads
    Value: !Ref OriginalImagesBucket

  ProcessedBucketName:
    Description: S3 bucket for processed images
    Value: !Ref ProcessedImagesBucket

  LambdaFunctionName:
    Description: Lambda function name
    Value: !Ref ImageProcessorFunction